//// <auto-generated />
//using System;
//using DreamBook.API.Persistence;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//namespace DreamBook.API.Persistence.Migrations.MySql
//{
//    [DbContext(typeof(DreamBookIdentityMySqlContext))]
//    partial class DreamBookIdentityMySqlContextModelSnapshot : ModelSnapshot
//    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("Relational:MaxIdentifierLength", 64)
//                .HasAnnotation("ProductVersion", "5.0.10");

//            modelBuilder.Entity("DreamBook.API.Auth.Model.ApplicationRole", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("longtext");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex");

//                    b.ToTable("AspNetRoles");
//                });

//            modelBuilder.Entity("DreamBook.API.Auth.Model.ApplicationUser", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("longtext");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("longtext");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex");

//                    b.ToTable("AspNetUsers");
//                });

//            modelBuilder.Entity("DreamBook.API.Auth.Model.RefreshToken", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<Guid?>("ApplicationUserId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("CreatedByIp")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime(6)");

//                    b.Property<DateTime>("ExpiryOn")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("RevokedByIp")
//                        .HasColumnType("longtext");

//                    b.Property<DateTime>("RevokedOn")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("Token")
//                        .HasColumnType("longtext");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("Id");

//                    b.HasIndex("ApplicationUserId");

//                    b.ToTable("RefreshToken");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("longtext");

//                    b.Property<Guid>("RoleId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetRoleClaims");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("longtext");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("longtext");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserClaims");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ProviderKey")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("longtext");

//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserLogins");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
//                {
//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.Property<Guid>("RoleId")
//                        .HasColumnType("char(36)");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetUserRoles");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
//                {
//                    b.Property<Guid>("UserId")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("Name")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("Value")
//                        .HasColumnType("longtext");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("AspNetUserTokens");
//                });

//            modelBuilder.Entity("DreamBook.API.Auth.Model.RefreshToken", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationUser", null)
//                        .WithMany("RefreshTokens")
//                        .HasForeignKey("ApplicationUserId");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
//                {
//                    b.HasOne("DreamBook.API.Auth.Model.ApplicationUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("DreamBook.API.Auth.Model.ApplicationUser", b =>
//                {
//                    b.Navigation("RefreshTokens");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
