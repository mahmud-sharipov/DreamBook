@inject DreamBook.Application.Abstraction.AppLanguageManager AppLanguageManager;
@model DreamBook.WebApplication.ViewModels.UpdateAdWithImageRequestModel;
@{
    ViewData["Title"] = "Редактирование рекламы";
}

<div class="row">
    <div class="col-md-2">
        @await Html.PartialAsync("PartialViews/_ActionsCard", new List<(string Link, string Label, string Icon)>
        {
            (@Url.Action("Delete", "Ads", new{ Id = @Model.Guid }) , "Удалить", "fa-times"),
            (@Url.Action("Index", "Ads") , "Список реклам", "fa-list"),
        })
    </div>

    <div class="col-md-10">
        <form asp-antiforgery="true" asp-action="Edit" asp-controller="Ads" class="form-group" enctype="multipart/form-data">
            <div class="card card-info card-outline">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3>
                </div>
                <div class="card-body">
                    <div>
                        <div class="validation" asp-validation-summary="ModelOnly"></div>
                        <div>
                            <div class="row">
                                <div class="col-2 col-sm-2">
                                    <div class="nav flex-column nav-tabs h-100" id="vert-tabs-tab" role="tablist" aria-orientation="vertical">
                                        @{
                                            @foreach (var language in AppLanguageManager.SupportLanguages)
                                            {
                                                var activeClass = language.IsDefault ? "active" : "";
                                                <a class="nav-link @activeClass" id="vert-tabs-home-tab" data-toggle="pill" href="#vert-tabs-@language.Code" role="tab" aria-controls="vert-tabs-@language.Code">@language.Name</a>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-10 col-sm-10">
                                    <div class="tab-content" id="vert-tabs-tabContent">
                                        @{ int index = 0;
                                            @foreach (var language in AppLanguageManager.SupportLanguages)
                                            {
                                                var activeClass = language.IsDefault ? "show active" : "";

                                                <div class="tab-pane text-left fade @activeClass" id="vert-tabs-@language.Code" role="tabpanel" aria-labelledby="vert-tabs-@language.Code-tab">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Translations[index].Title)
                                                        @Html.TextBoxFor(m => m.Translations[index].Title, new { @class = "form-control form-control-lg" })
                                                        <span asp-validation-for="Translations[index].Title"></span>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Translations[index].Description)
                                                        @Html.TextAreaFor(m => m.Translations[index].Description, new { @class = "form-control", @placeholder = "Контент", @rows = "6" })
                                                        <span asp-validation-for="Translations[index].Description"></span>
                                                    </div>
                                                    <input type="hidden" asp-for="Translations[index].LanguageGuid" value="@Model.Translations[index].LanguageGuid">
                                                </div>
                                                index++;
                                            }
                                        }
                                    </div>
                                    @Html.HiddenFor(m => m.Image)
                                    @Html.HiddenFor(m => m.Guid)

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Source)
                                        @Html.TextBoxFor(m => m.Source, new { @class = "form-control" })
                                        <span asp-validation-for="@Model.Source"></span>
                                    </div>
                                    <br />
                                    <div>
                                        <label asp-for="ImageFile"></label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" value="@Model?.Image" readonly>
                                            <span class="input-group-btn">
                                                <span class="btn btn-default btn-file">
                                                    <i class="fas fa-upload"></i>
                                                    <input asp-for="ImageFile" type="file" id="imgInp" accept="image/*">
                                                </span>
                                            </span>
                                        </div>
                                        <div class="m-2 text-center col-12 col-sm-12">
                                            <img id="blah" style="max-width: 100%; height: auto;" src="@Url.Action("GetAdImage","Ads",new { fileName = string.IsNullOrWhiteSpace(Model?.Image)?"default.png" : Model?.Image })" />
                                        </div>
                                    </div>
                                    <script>
                                        imgInp.onchange = evt => {
                                            const [file] = imgInp.files
                                            if (file) {
                                                blah.src = URL.createObjectURL(file)
                                            }
                                        }
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col ">
                            <button class="btn btn-success float-right">
                                <i class="fas fa-save" style="margin-right:10px"></i> Сохранить
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

@section Styles {
    <link rel="stylesheet" href="~/lib/jquery-validation/dist/validation.css">
}

@section BreadcrumbItems {
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Главная</a></li>
    <li class="breadcrumb-item active"><a asp-controller="Ads" asp-action="Index">Рекламы</a></li>
    <li class="breadcrumb-item active"><a asp-controller="Ads" asp-action="Details" asp-route-id="@Model.Guid">@Model.Guid</a></li>
    <li class="breadcrumb-item active">@ViewData["Title"]</li>
}
